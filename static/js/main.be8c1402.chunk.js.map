{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css","components/ButtonsFeedback/ButtonsFeedback.module.css","components/container/Container.module.css","components/ButtonsFeedback/ButtonsFeedback.jsx","components/Statistics/Statistics.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["module","exports","ButtonsFeedback","options","onLeaveFeedback","className","s","customBtn","map","option","btn","type","onClick","Statistics","good","neutral","bad","total","positiveFeedback","feedback","title","list","item","Notification","message","Feedback","state","Good","Neutral","Bad","positivePercentage","visible","show","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","leaveFeedback","prevState","this","console","log","Object","keys","React","Component","defoultProps","App","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,2B,gBCA3FD,EAAOC,QAAU,CAAC,MAAQ,0B,iBCA1BD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,+B,oBCAvED,EAAOC,QAAU,CAAC,UAAY,+B,qKCGxBC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKC,UAAWC,IAAEC,UAAlB,SACGJ,EAAQK,KAAI,SAAAC,GAAM,OACjB,wBACEJ,UAAWC,IAAEI,IACbC,KAAK,SAELC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GAHIA,S,gBCNTI,EAAa,SAAC,GAMb,IAAD,IALJC,YAKI,MALG,EAKH,MAJJC,eAII,MAJM,EAIN,MAHJC,WAGI,MAHE,EAGF,MAFJC,aAEI,MAFI,EAEJ,MADJC,wBACI,MADe,EACf,EACJ,OACE,sBAAKb,UAAWC,IAAEa,SAAlB,UACE,oBAAId,UAAWC,IAAEc,MAAjB,wBACA,qBAAIf,UAAWC,IAAEe,KAAjB,UACE,qBAAIhB,UAAWC,IAAEgB,KAAjB,mBAA8BR,KAC9B,qBAAIT,UAAWC,IAAEgB,KAAjB,sBAAiCP,KACjC,qBAAIV,UAAWC,IAAEgB,KAAjB,kBAA6BN,KAC7B,qBAAIX,UAAWC,IAAEgB,KAAjB,oBAA+BL,KAC/B,qBAAIZ,UAAWC,IAAEgB,KAAjB,gCAA2CJ,EAA3C,cCjBR,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,kCAAKA,EAAL,O,oBCGHC,E,4MAOJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLZ,MAAO,EACPa,mBAAoB,EACpBC,SAAS,G,EAGXC,KAAO,WACL,EAAKC,SAAS,CAAEF,SAAS,K,EAQ3BG,mBAAqB,WACnB,OAAO,EAAKR,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,EAQ3DmB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKX,MAAMZ,KAAc,EAAKoB,uBAAyB,G,EAG5EI,cAAgB,SAAA7B,GACd,EAAKwB,UAAS,SAAAM,GAAS,sBAAQ9B,EAAS8B,EAAU9B,GAAU,MAC5D,EAAKuB,OACL,EAAKE,qBACL,EAAKC,mC,4CAGP,WACE,MAOIK,KAAKd,MANPK,EADF,EACEA,QACAJ,EAFF,EAEEA,KACAC,EAHF,EAGEA,QACAC,EAJF,EAIEA,IACAK,EALF,EAKEA,mBACAC,EANF,EAMEA,gCAKF,OAFAM,QAAQC,IAAIR,GAGV,sBAAK7B,UAAWC,IAAEa,SAAlB,UACE,oBAAId,UAAWC,IAAEc,MAAjB,oCAEA,cAAC,EAAD,CACEf,UAAWC,IAAEC,UACbJ,QAASwC,OAAOC,KAAKJ,KAAKd,OAC1BtB,gBAAiBoC,KAAKF,gBAGxB,qCACIP,GAAW,cAACR,EAAD,CAAcC,QAAQ,sBAElCO,GACC,cAAC,EAAD,CACEjB,KAAMa,EACNZ,QAASa,EACTZ,IAAKa,EACLZ,MAAOiB,EACPhB,iBAAkBiB,c,GA5ETU,IAAMC,WAAvBrB,EACGsB,aAAe,CACpBjC,KAAM,EACNC,QAAS,EACTC,IAAK,G,qBCLM,SAASgC,IACtB,OACE,qBAAK3C,UAAWC,IAAE2C,UAAlB,SACE,cAAC,EAAD,MCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACJ,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.be8c1402.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__2Q7p-\",\"list\":\"Statistics_list__1HvOn\",\"item\":\"Statistics_item__2ewlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Feedback_title__1A6Af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customBtn\":\"ButtonsFeedback_customBtn__xE0yo\",\"btn\":\"ButtonsFeedback_btn__2D3bG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1qxq6\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ButtonsFeedback.module.css';\n\nconst ButtonsFeedback = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={s.customBtn}>\n      {options.map(option => (\n        <button\n          className={s.btn}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nButtonsFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport { ButtonsFeedback };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Statistics.module.css';\n\nconst Statistics = ({\n  good = 0,\n  neutral = 0,\n  bad = 0,\n  total = 0,\n  positiveFeedback = 0,\n}) => {\n  return (\n    <div className={s.feedback}>\n      <h2 className={s.title}>Statistics</h2>\n      <ul className={s.list}>\n        <li className={s.item}>Good: {good}</li>\n        <li className={s.item}>Neutral: {neutral}</li>\n        <li className={s.item}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.item}>Positive Feedback: {positiveFeedback}%</li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n\nexport { Statistics };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <p> {message} </p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport { Notification };\n","import React from 'react';\nimport { ButtonsFeedback } from 'components/ButtonsFeedback/ButtonsFeedback';\nimport { Statistics } from 'components/Statistics/Statistics';\nimport { Notification } from 'components/Feedback/Notification/Notification';\nimport s from './Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nclass Feedback extends React.Component {\n  static defoultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    Good: 0,\n    Neutral: 0,\n    Bad: 0,\n    total: 0,\n    positivePercentage: 0,\n    visible: false,\n  };\n\n  show = () => {\n    this.setState({ visible: true });\n  };\n\n  //     countTotalFeedback = () => {\n  //     this.setState(({ good, neutral, bad }) => ({\n  //         total: good + neutral + bad,\n  //     }));\n  //   };\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  //   countPositiveFeedbackPercentage = () => {\n  //     this.setState(({ good, total }) => ({\n  //       positivePercentage: ((good * 100) / total) || 0,\n  //     }));\n  //   };\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback()) || 0;\n  };\n\n  leaveFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n    this.show();\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  render() {\n    const {\n      visible,\n      Good,\n      Neutral,\n      Bad,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this.state;\n\n    console.log(countTotalFeedback);\n\n    return (\n      <div className={s.feedback}>\n        <h1 className={s.title}>Please leave feedback </h1>\n\n        <ButtonsFeedback\n          className={s.customBtn}\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.leaveFeedback}\n        />\n\n        <section>\n          {!visible && <Notification message=\"No feedback given\" />}\n\n          {visible && (\n            <Statistics\n              good={Good}\n              neutral={Neutral}\n              bad={Bad}\n              total={countTotalFeedback}\n              positiveFeedback={countPositiveFeedbackPercentage}\n            />\n          )}\n        </section>\n\n        {/* <section>\n          {visible ? (\n            <Statistics\n              good={Good}\n              neutral={Neutral}\n              bad={Bad}\n              total={countTotalFeedback}\n              positiveFeedback={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </section> */}\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  Good: PropTypes.number,\n  Neutral: PropTypes.number,\n  Bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n  visible: PropTypes.bool,\n};\n\nexport { Feedback };\n","import React from 'react';\n//components\nimport { Feedback } from './components/Feedback/Feedback';\n\nimport s from 'components/container/Container.module.css';\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <Feedback />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './not/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n//reportWebVitals();\n"],"sourceRoot":""}